# p = GCD ( c1 + c2, n)
# q = GCD(c1-c2, n)
# r = n // (p*q)

p = 8609258896430210586523688955272794335561428099377427081622836355194006054569349679983850344916908011330202034512905353365631416251631307084038768336538857
q = 7572427786695057270624844967644562609112132599800420296747189080920032359205995588384031542287784540006438555802994008688795974493684400576592403320929717
r = 9018251874561850467651399512661829039310834429345808807288228370045576292997274498659156953954383290793552486677903139680704353709352146165598701061994853
n = p * q * r
cm = 357982930129036534232652210898740711702843117900101310390536835935714799577440705618646343456679847613022604725158389766496649223820165598357113877892553200702943562674928769780834623569501835458020870291541041964954580145140283927441757571859062193670500697241155641475887438532923910772758985332976303801843564388289302751743334888885607686066607804176327367188812325636165858751339661015759861175537925741744142766298156196248822715533235458083173713289585866

m65537p = cm % p
m65537q = cm % q
m65537r = cm % r

m65537p = Mod(m65537p, p).sqrt(all = True)
m65537q = Mod(m65537q, q).sqrt(all = True)
m65537r = Mod(m65537r, r).sqrt(all = True)

val = []
for i in m65537p:
	for j in m65537q:
		for k in m65537r:
			val.append(crt([int(i),int(j),int(k)],[p,q,r]))

phi = (p-1) * (q-1) * (r-1)
d = inverse(65537,phi)
for ct in val:
	flag = long_to_bytes(int(pow(ct,d,n)))
	if b"SECCON" in flag:
		print(flag)

# SECCON{being_able_to_s0lve_this_1s_great!}



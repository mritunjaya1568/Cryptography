from math import log
from gmpy2 import iroot
from z3 import *


n = 23621897539318735382781746886812894513691748769885872561608018745569703193093855463437952944858188722853908795670837963164709616242593638401041032595833264922632543233131776723436806335966522962980332524550454606209746603582382656306848557857064499642423449000991045716976106596626510521840476248557767311518172872788877427817242273511650663556017746625391305473837996013171596099512668142370526423632408066956471075397237532978090078953286385148467587638857728496028131872602103616105358742971697903227400622583960651099656237391304458477107349123418958226433986832338800716565565348303844157431915191481285604520251
p = Int('p')
pow_2 = 2 ** 1021

# from prime number theorem
val = int(log(1<<1025))


for i in range(val):
	print(i)
	s = Solver()
	s.add(p * p - pow_2 * p - 2 * i * p == n)
	if s.check() == sat:
		print("Got p")
		print(s.model())
		break

print("Checking Second case when q > p")

for i in range(val):
	print(i)
	s = Solver()
	s.add(p * p + pow_2 * p + 2 * i * p == n)
	if s.check() == sat:
		print("Got p")
		print(s.model())
		break
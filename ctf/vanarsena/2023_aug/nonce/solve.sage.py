

# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_608 = Integer(608); _sage_const_0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff = Integer(0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff); _sage_const_0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc = Integer(0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc); _sage_const_0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b = Integer(0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b); _sage_const_0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296 = Integer(0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296); _sage_const_0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5 = Integer(0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5); _sage_const_0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551 = Integer(0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551); _sage_const_0x1 = Integer(0x1); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_256 = Integer(256)
load('coppersmith.sage')

enc_flag = "hOtHc2dafgWuv2nHQDGsoGoF+BmDhy3N0seYgY9kVnw="

h, r, s = [_sage_const_0 ] * _sage_const_608 , [_sage_const_0 ] * _sage_const_608  , [_sage_const_0 ] * _sage_const_608  
# read line by line from log.txt and do exec
with open('log.txt', 'r') as f:
    for line in f:
        exec(line.strip())

print(len(h), len(r), len(s))


p = _sage_const_0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff 
K = GF(p)
a = K(_sage_const_0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc )
b = K(_sage_const_0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b )
E = EllipticCurve(K, (a, b))
G = E(_sage_const_0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296 , _sage_const_0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5 )
E.set_order(_sage_const_0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551  * _sage_const_0x1 )

order = E.order()

def functor(lest0,lest1):
    R = Integers(order)
    P = PolynomialRing(R, names=('x', 'y',)); (x, y,) = P._first_ngens(2)
    f = (x * lest0[_sage_const_2 ] - lest0[_sage_const_0 ]) * lest1[_sage_const_1 ] - lest0[_sage_const_1 ] * (y * lest1[_sage_const_2 ] - lest1[_sage_const_0 ])
    return f

for i in range(_sage_const_1 ):
    for j in range(_sage_const_2 ):
        if i == j:
            continue
        f = functor([h[i], r[i], s[i]], [h[j], r[j], s[j]])
        bounds = (floor(_sage_const_2 **_sage_const_256 ), floor(_sage_const_2 **_sage_const_256 ))
        roots = small_roots(f, bounds)
        if roots:
            print(roots)
            print(i, j)
            exit()
        else:
            print(i, j, 'no roots')









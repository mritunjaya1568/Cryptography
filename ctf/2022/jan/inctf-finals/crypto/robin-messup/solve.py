from Crypto.Util.number import *
from gmpy2 import isqrt

c = 44672125665979746187022088487287549148143682914366860697256607123781682388661134720376815356776762660865148273332405351472399646497461244873917009600249493567836374853148085611514506308693392828759662814656597749775400588251246138775054464374432452292004323598707522226227586505604237344275146563551115841743
n = 170813881629246718089558943285403963046165498115460534102073197324160828215616441850294542892978016909352720239324757076517038997286413982272818205282051491746686039105669222890466100723377271607756487000837132352170050403170972192423505839737696311632004375609511311367620143335896629889718664132886463866897

def fermat(n):
	a = isqrt(n)+1	
	b = a*a - n
	z = isqrt(b)
	while z*z != b:
		b = b + 2*a + 1
		a = a + 1
		z = sqrt(b)	
	return (a+z), (a-z)

p,q = fermat(n)
print(p,q)

assert p*q == n


mp = pow(c,(p+1)//4,p)
mq = pow(c,(q+1)//4,q)

a = mq*p*inverse(p,q) 
b = mp*q*inverse(q,p)


lest = []

lest.append((a+b)%n)
lest.append((a-b)%n)

lest2 = []
for i in lest:
	lest2.append(n-i)

for i in lest:
	print(long_to_bytes(i))

for i in lest2:
	print(long_to_bytes(i))

''' inctf{835eb52e8245ae4b4112f9897b55310dc15da5fc1f5356907b39a83dadfad734} '''